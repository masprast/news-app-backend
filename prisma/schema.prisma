// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  fullname  String?
  username  String?     @unique
  email     String      @unique
  pwdHash   String
  role      UserRole    @default(USER)
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  token     Token[]
}

enum UserRole {
  ADMIN
  USER
}

model News{
  id          String          @id @default(uuid())
  title       String          @unique
  detail      Bytes
  categories  CategoryNews[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime?
}

model Category{
  id          String          @id @default(uuid())
  name        String          @unique
  news        CategoryNews[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime?
}

model CategoryNews{
  news          News        @relation(fields: [newsId],references: [id])
  newsId        String
  category      Category    @relation(fields: [categoryId],references: [id])
  categoryId    String

  @@id([newsId,categoryId])
}

model Token{
  id        String      @id @default(uuid())
  token     String
  type      TipeToken
  expire    DateTime
  created   DateTime    @default(now())
  user      User        @relation(fields: [userId],references: [id])
  userId    String
}

enum TipeToken {
  ACCESS
  REFRESH
}